type Organisation {
  id: ID! @unique
  name: String
  users: [User!]!
  patients: [Patient!]! @relation(name: "OrgPatients", onDelete: SET_NULL)
}

type User {
  id: ID! @unique
  name: String!
  email: String! @unique
  password: String!
  role: ROLE! @default(value: "FAMILY")
  organisations: [Organisation!]!
}

type Patient {
  id: ID! @unique
  name: String!
  dob: DateTime!
  careLevel: CARE_LEVEL @default(value: "REST_HOME")
  family: [User!]!
  contacts: [PatientContact!]!
    @relation(name: "PatientContacts", onDelete: CASCADE)
  organisation: Organisation @relation(name: "OrgPatients")
  assignedTasks: [Task!]!
  tasks: [Task!]!
}

type Task {
  id: ID! @unique
  name: String!
  complete: Boolean!
  completedAt: DateTime
  priorityLevel: PRIORITY_LEVEL
  note: String
  alertBefore: DateTime # amount of given before the event
  checkAt: [DateTime!]! # what time(s) should this be checked at
  taskDays: [DAYS_OF_THE_WEEK!]! # what days should this task be run
  saveAsTemplate: Boolean
}

type PatientContact {
  id: ID! @unique
  name: String!
  address: String
  homePhone: String
  mobilePhone: String
  forPatient: Patient! @relation(name: "PatientContacts")
}

enum ROLE {
  MANAGER
  NURSE
  CAREGIVER
  FAMILY
  WIZARD
}

enum CARE_LEVEL {
  REST_HOME
  DEMENTIA
  HOSPITAL_CARE
}

enum DAYS_OF_THE_WEEK {
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
}

enum PRIORITY_LEVEL {
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
}
